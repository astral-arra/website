---
import { getCollection, getEntry } from "astro:content";
const navConfig = await getCollection("nav");
const blogConfig = await getCollection("blog");
const siteConfig = await getEntry("site", "data");
const { blogUrl = "" } = siteConfig.data;

const navItems = navConfig[0].data;

const blogCategories = blogConfig.reduce((categories, post) => {
  let blogCategories = post.data.categories;
  if (!blogCategories || blogCategories.length === 0) {
    return categories;
  }
  if (!Array.isArray(blogCategories)) {
    blogCategories = [blogCategories];
  }
  blogCategories.forEach((category = "") => {
    if (!categories.includes(category)) {
      categories.push(category);
    }
  });
  return categories;
}, []);
const { url = "", isHero = false } = Astro.props;
---

<div
  class={`${
    isHero
      ? ""
      : "from-cloud-burst-900/60 to-cloud-burst-900/70 shadow-cloud-burst-100 bg-gradient-to-b shadow-2xl"
  } main-nav hidden w-full md:flex flex-row justify-between items-center`}
>
  <div class="logo">
    <a class="home block h-24 w-24" href="/"> </a>
  </div>
  <div>
    <nav class="w-full uppercase">
      <ul class="flex flex-row items-center justify-around p-4 text-cloud-burst-50" role="menu">
        {
          navItems.map((item) => {
            const hasBlogCategories = item.url === blogUrl && blogCategories.length > 0;
            return (
              <li role="none" class="group relative">
                <a
                  role="menuitem"
                  href={item.url}
                  class={`${url === item.url ? "font-bold " : ""}
                  ${hasBlogCategories ? "group-hover:rounded-b-none" : ""}
                  ${isHero ? "group-hover:bg-cloud-burst-400/50" : "group-hover:bg-cloud-burst-400"}
                   flex h-12 items-center justify-center rounded-lg bg-transparent px-4 py-2 text-center transition duration-500 hover:shadow-2xl`}
                >
                  {item.title}&nbsp;
                  {hasBlogCategories ? <span class="group-hover:rotate-180"> â–¾ </span> : " "}
                </a>

                {hasBlogCategories && (
                  <ul
                    role="menu"
                    class={`${
                      isHero ? "bg-cloud-burst-400/20" : "bg-cloud-burst-400"
                    } absolute left-0 flex min-w-[200px] -translate-y-full flex-col space-y-2 rounded-b-lg rounded-tr-lg border-2 border-cloud-burst-400/50 p-4 opacity-0 transition duration-300 group-hover:translate-y-0 group-hover:opacity-100`}
                  >
                    {blogCategories.map((category) => (
                      <li role="none" class="w-full text-left">
                        <a role="menuitem" href={`${item.url}/categories/${category}`}>
                          {category}
                        </a>
                      </li>
                    ))}
                  </ul>
                )}
              </li>
            );
          })
        }
      </ul>
    </nav>
    <div id="search"></div>
  </div>
</div>
<div
  class={`${
    isHero
      ? ""
      : "from-cloud-burst-900/60 to-cloud-burst-900/70 shadow-cloud-burst-100 bg-gradient-to-b shadow-2xl"
  } mobile-header flex flex-row items-center justify-between md:hidden`}
>
  <div class="logo">
    <a class="home block h-12 w-12" href="/"> </a>
  </div>
  <div class="menu p-4 text-cloud-burst-50">
    <button role="button" id="menu-toggle" type="button" class="m-0 bg-none p-0">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
        class="h-6 w-6 cursor-pointer fill-current stroke-current text-cloud-burst-50 transition duration-500"
      >
        <path
          d="M 0 7.5 L 0 12.5 L 50 12.5 L 50 7.5 Z M 0 22.5 L 0 27.5 L 50 27.5 L 50 22.5 Z M 0 37.5 L 0 42.5 L 50 42.5 L 50 37.5 Z"
        ></path>
      </svg>
    </button>
  </div>
</div>
<div
  aria-expanded="false"
  id="mobile-nav"
  class="mobile-nav absolute z-40 h-full w-full -translate-x-full bg-gradient-to-r from-cloud-burst-900/60 to-cloud-burst-900 transition duration-500 md:hidden"
>
  <nav class="h-full uppercase">
    <ul class="flex flex-col items-start justify-center p-4" role="menu">
      {
        navItems.map((item) => (
          <li role="none" class="w-full text-left">
            <a
              href={item.url}
              class={`${
                url === item.url ? "font-bold underline" : ""
              } flex h-12 w-full items-center rounded-lg bg-transparent px-4 py-2 text-center text-cloud-burst-50 transition duration-500 hover:bg-cloud-burst-400/50 hover:shadow-2xl`}
            >
              {item.title}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</div>

<script is:inline>
  const menuToggle = document.querySelector("#menu-toggle");
  const mobileNav = document.querySelector("#mobile-nav");
  const mobileLinks = mobileNav.querySelectorAll("a");
  if (mobileLinks.length > 0) {
    mobileLinks.forEach((link) => {
      link.addEventListener("click", () => {
        mobileNav.classList.add("-translate-x-full");
        mobileNav.setAttribute("aria-expanded", "false");
      });
    });
  }

  if (menuToggle) {
    menuToggle.addEventListener("click", () => {
      const expanded = mobileNav.getAttribute("aria-expanded");
      if (expanded === "false") {
        mobileNav.classList.remove("-translate-x-full");
        mobileNav.setAttribute("aria-expanded", "true");
      } else {
        mobileNav.classList.add("-translate-x-full");
        mobileNav.setAttribute("aria-expanded", "false");
      }
    });
  }
</script>

<script>
  window.addEventListener("DOMContentLoaded", () => {
    new PagefindUI({ element: "#search", showSubResults: true });
  });
</script>

<style>
  .logo {
    @apply flex items-center justify-center p-4;
  }
</style>
